name: Build and Release

on:
  push:
    tags:
      - '*'

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install cmake gcc-arm-none-eabi libnewlib-arm-none-eabi build-essential python3 git

    - name: Configure UART build
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSB_SERIAL=OFF

    - name: Build UART variant
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        cp ${{github.workspace}}/build/pico-ident.uf2 ${{github.workspace}}/pico-ident-uart.uf2

    - name: Configure USB build
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DUSB_SERIAL=ON

    - name: Build USB variant
      run: |
        cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
        cp ${{github.workspace}}/build/pico-ident.uf2 ${{github.workspace}}/pico-ident-usb.uf2

    - name: Create release
      env:
        TAG_NAME: ${{ github.ref_name }}
        GH_TOKEN: ${{ github.token }}
      run: |
        release_args=(
          "$TAG_NAME"
          --title "${TAG_NAME}"
          --target "$GITHUB_SHA"
          --generate-notes
        )

        labeled_assets=(
          "${{github.workspace}}/pico-ident-uart.uf2#pico-ident UF2 (UART)"
          "${{github.workspace}}/pico-ident-usb.uf2#pico-ident UF2 (USB)"
        )

        # check for e.g., v1.1.0-rc0
        if [[ $TAG_NAME == *-* ]]; then
          release_args+=( --prerelease )
        fi

        gh release create "${release_args[@]}" -- "${labeled_assets[@]}"
